[{"C:\\Users\\jdk17\\Desktop\\TargetVet\\src\\index.js":"1","C:\\Users\\jdk17\\Desktop\\TargetVet\\src\\App.js":"2","C:\\Users\\jdk17\\Desktop\\TargetVet\\src\\products.js":"3","C:\\Users\\jdk17\\Desktop\\TargetVet\\src\\config\\PrivateRoute.js":"4","C:\\Users\\jdk17\\Desktop\\TargetVet\\src\\config\\Auth.js":"5","C:\\Users\\jdk17\\Desktop\\TargetVet\\src\\config\\SignUp.js":"6","C:\\Users\\jdk17\\Desktop\\TargetVet\\src\\config\\Login.js":"7","C:\\Users\\jdk17\\Desktop\\TargetVet\\src\\pages\\equine.js":"8","C:\\Users\\jdk17\\Desktop\\TargetVet\\src\\pages\\home.js":"9","C:\\Users\\jdk17\\Desktop\\TargetVet\\src\\pages\\canine.js":"10","C:\\Users\\jdk17\\Desktop\\TargetVet\\src\\components\\cart\\cart.js":"11","C:\\Users\\jdk17\\Desktop\\TargetVet\\src\\components\\store\\store.js":"12","C:\\Users\\jdk17\\Desktop\\TargetVet\\src\\components\\checkout\\checkout.js":"13","C:\\Users\\jdk17\\Desktop\\TargetVet\\src\\components\\checkout\\payment\\success.js":"14","C:\\Users\\jdk17\\Desktop\\TargetVet\\src\\components\\nav\\nav.js":"15","C:\\Users\\jdk17\\Desktop\\TargetVet\\src\\config\\base.js":"16","C:\\Users\\jdk17\\Desktop\\TargetVet\\src\\components\\cart\\cart-item.js":"17","C:\\Users\\jdk17\\Desktop\\TargetVet\\src\\components\\checkout\\summary.js":"18","C:\\Users\\jdk17\\Desktop\\TargetVet\\src\\components\\checkout\\shippingAddress.js":"19","C:\\Users\\jdk17\\Desktop\\TargetVet\\src\\components\\checkout\\payment\\payment.js":"20","C:\\Users\\jdk17\\Desktop\\TargetVet\\src\\components\\nav\\auth-items.js":"21","C:\\Users\\jdk17\\Desktop\\TargetVet\\src\\components\\checkout\\review.js":"22","C:\\Users\\jdk17\\Desktop\\TargetVet\\src\\components\\nav\\top-auth-items.js":"23","C:\\Users\\jdk17\\Desktop\\TargetVet\\src\\components\\store\\productList\\productList.js":"24","C:\\Users\\jdk17\\Desktop\\TargetVet\\src\\components\\store\\storeFront\\storeFront.js":"25","C:\\Users\\jdk17\\Desktop\\TargetVet\\src\\components\\store\\storeFront\\storeFrontDeck.js":"26","C:\\Users\\jdk17\\Desktop\\TargetVet\\src\\components\\store\\storeFront\\storeFrontCard.js":"27","C:\\Users\\jdk17\\Desktop\\TargetVet\\src\\components\\store\\storeFront\\storeFrontGallery.js":"28","C:\\Users\\jdk17\\Desktop\\TargetVet\\src\\components\\store\\storeFront\\imgGalleryCol.js":"29","C:\\Users\\jdk17\\Desktop\\TargetVet\\src\\components\\checkout\\reviewCard.js":"30","C:\\Users\\jdk17\\Desktop\\TargetVet\\src\\components\\checkout\\payment\\paymentOptions.js":"31","C:\\Users\\jdk17\\Desktop\\TargetVet\\src\\components\\checkout\\payment\\Paypal.js":"32","C:\\Users\\jdk17\\Desktop\\TargetVet\\src\\components\\store\\storeFront\\infoAccordion.js":"33","C:\\Users\\jdk17\\Desktop\\TargetVet\\src\\pages\\AccountPage\\accountInfoPage.js":"34","C:\\Users\\jdk17\\Desktop\\TargetVet\\src\\pages\\AccountPage\\orderHistoryComponet.js":"35"},{"size":200,"mtime":1609952745853,"results":"36","hashOfConfig":"37"},{"size":6077,"mtime":1610568039561,"results":"38","hashOfConfig":"37"},{"size":67675,"mtime":1608743681726,"results":"39","hashOfConfig":"37"},{"size":575,"mtime":1607385401716,"results":"40","hashOfConfig":"37"},{"size":529,"mtime":1607965168281,"results":"41","hashOfConfig":"37"},{"size":3221,"mtime":1610554017451,"results":"42","hashOfConfig":"37"},{"size":2047,"mtime":1611171146238,"results":"43","hashOfConfig":"37"},{"size":504,"mtime":1607965125365,"results":"44","hashOfConfig":"37"},{"size":380,"mtime":1607965111286,"results":"45","hashOfConfig":"37"},{"size":504,"mtime":1607965135239,"results":"46","hashOfConfig":"37"},{"size":2508,"mtime":1609951207295,"results":"47","hashOfConfig":"37"},{"size":1020,"mtime":1609956396526,"results":"48","hashOfConfig":"37"},{"size":630,"mtime":1610149081433,"results":"49","hashOfConfig":"37"},{"size":448,"mtime":1609176699625,"results":"50","hashOfConfig":"37"},{"size":3396,"mtime":1611171078126,"results":"51","hashOfConfig":"37"},{"size":554,"mtime":1610495206819,"results":"52","hashOfConfig":"37"},{"size":2444,"mtime":1610031811340,"results":"53","hashOfConfig":"37"},{"size":5033,"mtime":1611072158543,"results":"54","hashOfConfig":"37"},{"size":4382,"mtime":1609176991496,"results":"55","hashOfConfig":"37"},{"size":2415,"mtime":1609446402278,"results":"56","hashOfConfig":"37"},{"size":1421,"mtime":1609890475910,"results":"57","hashOfConfig":"37"},{"size":639,"mtime":1610149075756,"results":"58","hashOfConfig":"37"},{"size":1458,"mtime":1609875408860,"results":"59","hashOfConfig":"37"},{"size":1171,"mtime":1607976940529,"results":"60","hashOfConfig":"37"},{"size":980,"mtime":1609956428722,"results":"61","hashOfConfig":"37"},{"size":2221,"mtime":1609956478448,"results":"62","hashOfConfig":"37"},{"size":4418,"mtime":1609957541358,"results":"63","hashOfConfig":"37"},{"size":993,"mtime":1609890057182,"results":"64","hashOfConfig":"37"},{"size":382,"mtime":1609888701549,"results":"65","hashOfConfig":"37"},{"size":727,"mtime":1609197587686,"results":"66","hashOfConfig":"37"},{"size":1514,"mtime":1609430813825,"results":"67","hashOfConfig":"37"},{"size":2836,"mtime":1610147213678,"results":"68","hashOfConfig":"37"},{"size":1371,"mtime":1609950227933,"results":"69","hashOfConfig":"37"},{"size":6168,"mtime":1611170761198,"results":"70","hashOfConfig":"37"},{"size":3131,"mtime":1611092657024,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"owjxps",{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"74"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"74"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"74"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"74"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"74"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"74"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"118"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"74"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"74"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"74"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"74"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"74"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"118"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"74"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"74"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"158","messages":"159","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"74"},"C:\\Users\\jdk17\\Desktop\\TargetVet\\src\\index.js",[],["161","162"],"C:\\Users\\jdk17\\Desktop\\TargetVet\\src\\App.js",["163","164","165"],"import React, {useState, useEffect} from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\nimport firebase from 'firebase';\r\n\r\n//pages\r\nimport Canine from './pages/canine';\r\nimport Equine from './pages/equine';\r\nimport Home from './pages/home';\r\nimport AccountInfo from './pages/AccountPage/accountInfoPage';\r\n\r\n//components\r\nimport Store from './components/store/store';\r\nimport Nav from './components/nav/nav';\r\nimport Cart from './components/cart/cart';\r\nimport Checkout from './components/checkout/checkout';\r\nimport Success from './components/checkout/payment/success';\r\n\r\n//config\r\nimport { AuthProvider } from './config/Auth';\r\nimport SignUp from './config/SignUp';\r\nimport Login from './config/Login';\r\n\r\n\r\nimport products from './products';\r\n\r\n\r\n\r\n\r\nexport default function App() {\r\n\r\n  // firebase requirements\r\n  const database = firebase.database();\r\n  const ref = database.ref('products');\r\n\r\n  // firebase products array for showing either product is in stock or not\r\n  const [instockArray, setInstockArray] = useState([]);\r\n\r\n  const [category, setCategory] = useState('none');\r\n  const [group, setGroup] = useState(1)\r\n  const [cart, setCart] = useState([])\r\n  const [priceTotal, setPriceTotal] = useState(0);\r\n  \r\n\r\n\r\n\r\n  useEffect(() => {\r\n    ref.on('value', gotDataHandler, errDataHandler);\r\n\r\n\r\n  },[])\r\n\r\n  const gotDataHandler = (data) => {\r\n    const dataBookings = data.val();\r\n    const keys = Object.keys(dataBookings);\r\n    for (let i = 0; i < keys.length; i ++){\r\n      let k = keys[i]\r\n      const list = dataBookings[k]\r\n      setInstockArray(instockArray => [...instockArray, list]);\r\n    }\r\n  }\r\n  const errDataHandler = (err) => {\r\n    console.log('Error!')\r\n    console.log(err)\r\n  }\r\n\r\n\r\n  const categories = [\r\n      {\r\n        name: 'Target Canine Progesterone',\r\n        group: 1,\r\n        type: 'Canine',\r\n        id: 124,\r\n      },\r\n      {\r\n        name: 'Equine IgG',\r\n        group: 5,\r\n        type: 'Equine',\r\n        id: 123,\r\n      },\r\n      {\r\n        name: 'Equine SAA',\r\n        group: 6,\r\n        type: 'Equine',\r\n        id: 154,\r\n      },        \r\n      {\r\n          name: 'Canine Pregnancy Relaxin',\r\n          group: 3,\r\n          type: 'Canine',\r\n          id: 224,\r\n      },\r\n      {\r\n          name: 'Equine P4 Quick Progesterone',\r\n          group: 4,\r\n          type: 'Equine',\r\n          id: 824,\r\n      },\r\n      {\r\n          name: 'Canine Quick P4 Progesterone',\r\n          group: 2,\r\n          type: 'Canine',\r\n          id: 924,\r\n      }\r\n  ]\r\n\r\n  useEffect(() => {\r\n    totalPriceHandler();\r\n  },);\r\n  \r\n  const setCategoryHandler = (categorySelected) => {\r\n\r\n    if (categorySelected === 'none'){\r\n      setCategory('none')\r\n    } else {\r\n      setCategory(categorySelected.name)\r\n      setGroup(categorySelected.group)\r\n    }\r\n  }\r\n\r\n  const addToCartHandler = (itemSelected) => {\r\n\r\n    let newProduct = {\r\n      title: itemSelected.product.title,\r\n      subtitle: itemSelected.product.subtitle,\r\n      qty: itemSelected.productQty ,\r\n      img: itemSelected.product.img,\r\n      price: itemSelected.product.price,\r\n      test: itemSelected.product.test,\r\n      id: itemSelected.product.id\r\n    }\r\n\r\n    setCart(cart => [...cart, newProduct ] );\r\n\r\n    cart.forEach(item => {\r\n      if(item.id === itemSelected.product.id){\r\n        let newDouble = {\r\n          title: item.title,\r\n          subtitle: item.subtitle,\r\n          qty: item.qty + itemSelected.productQty,\r\n          img: item.img,\r\n          price: item.price,\r\n          test: item.test,\r\n          id: item.id\r\n        }\r\n        setCart(cart.filter(item => item.id !== itemSelected.product.id))\r\n        setCart(cart => [...cart, newDouble ] );\r\n      }\r\n    });\r\n\r\n\r\n\r\n  }\r\n\r\n  const clearCartHandler = () => {\r\n    setCart([])\r\n  }\r\n\r\n  const removeItemHandler = (id) => {\r\n    setCart(cart.filter(item => item.id !== id))\r\n  }\r\n\r\n  const totalPriceHandler = () => {\r\n    const newGroup = [0]\r\n    const reducer = (accumulator, currentValue) => accumulator + currentValue;\r\n    cart.forEach(item => {\r\n        newGroup.push(item.price * item.qty)\r\n    });\r\n    setPriceTotal(newGroup.reduce(reducer))\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <AuthProvider>\r\n      <Router>\r\n        <div>\r\n          <Nav cart={cart} />\r\n          <Switch>\r\n            <Route path=\"/canine\">\r\n              <Canine />\r\n            </Route>\r\n            <Route path=\"/equine\">\r\n              <Equine />\r\n            </Route>\r\n            <Route path=\"/store\">\r\n              <Store className='store'\r\n              products={products}\r\n              group={group} \r\n              categories={categories} \r\n              setCategoryHandler={setCategoryHandler} \r\n              category={category} \r\n              addToCartHandler={addToCartHandler}\r\n              cart={cart}\r\n              setCart={setCart}\r\n              instockArray={instockArray} />\r\n            </Route>\r\n            <Route path='/cart' >\r\n              <Cart cart={cart} clearCart={clearCartHandler} cart={cart} setCart={setCart} setPriceTotal={setPriceTotal} priceTotal={priceTotal} removeItemHandler={removeItemHandler} />\r\n            </Route>\r\n            <Route path='/checkout' >\r\n              <Checkout cart={cart} priceTotal={priceTotal} />\r\n            </Route>\r\n            <Route path='/sign-in'>\r\n              <Login/>\r\n            </Route>\r\n            <Route path='/create-account'>\r\n              <SignUp/>\r\n            </Route>\r\n            <Route path='/success' >\r\n              <Success setCart={setCart} />\r\n            </Route>\r\n            <Route path='/account' >\r\n              <AccountInfo cart={cart} clearCart={clearCartHandler} cart={cart} setCart={setCart} setPriceTotal={setPriceTotal} priceTotal={priceTotal} removeItemHandler={removeItemHandler} />\r\n            </Route>\r\n            <Route exact path='/' >\r\n              <Home/>\r\n            </Route>\r\n            {/* <PrivateRoute exact path='/' component={Home} /> */}\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    </AuthProvider>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n","C:\\Users\\jdk17\\Desktop\\TargetVet\\src\\products.js",[],"C:\\Users\\jdk17\\Desktop\\TargetVet\\src\\config\\PrivateRoute.js",[],["166","167"],"C:\\Users\\jdk17\\Desktop\\TargetVet\\src\\config\\Auth.js",[],"C:\\Users\\jdk17\\Desktop\\TargetVet\\src\\config\\SignUp.js",["168","169","170"],"import React, { useCallback, useState, useEffect } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport firebase from 'firebase';\r\nimport app from './base';\r\nimport { Container, Row, Col, Form, Button } from 'react-bootstrap';\r\nimport emailjs from 'emailjs-com';\r\n\r\n\r\n\r\nconst SignUp = ({ history }) => {\r\n\r\n    const db = firebase.firestore();\r\n\r\n    const [firebaseUid, setFirebaseUid] = useState();\r\n    const [userName, setUserName] = useState();\r\n\r\n    useEffect(() => {\r\n        // Update the document title using the browser API\r\n\r\n        app.auth().onAuthStateChanged(function(user) {\r\n            if (user) {\r\n              // User is signed in.\r\n                setFirebaseUid(user.uid);\r\n            } else {\r\n              // No user is signed in.\r\n\r\n            }\r\n        });\r\n    },[]);\r\n\r\n\r\n    const handleSignUp = useCallback(async event => {\r\n        event.preventDefault();\r\n\r\n        const { email, password} = event.target.elements;\r\n        try {\r\n            await app\r\n                .auth()\r\n                .createUserWithEmailAndPassword(email.value, password.value).then(cred => {\r\n                    return db.collection('users').doc(cred.user.uid).set({\r\n                        name: userName\r\n                    })\r\n                })\r\n            console.log('sent')\r\n\r\n            // history.push('/');\r\n        } catch (error) {\r\n            alert(error);\r\n        }\r\n\r\n        //send the welcome email from emailjs\r\n        // sendWelcomeEmail(event);\r\n\r\n    }, [history]);\r\n\r\n\r\n\r\n\r\n    const sendWelcomeEmail = (e) => {\r\n        e.preventDefault();\r\n\r\n        emailjs.sendForm('service_12x6qif', 'template_hmvet7f', e.target, 'user_CqDTkQBUriwIbjinTaVaw')\r\n        .then((result) => {\r\n            console.log(result.text);\r\n        }, (error) => {\r\n            console.log(error.text);\r\n        });\r\n        e.target.reset()\r\n    }\r\n\r\n\r\n    return (\r\n        <Container>\r\n            <Row>\r\n                <Col>\r\n                    <Form onSubmit={handleSignUp} >\r\n                        <Form.Group controlId=\"formBasicName\">\r\n                            <h1>Create Account</h1>\r\n                            <Form.Label>Name</Form.Label>\r\n                            <Form.Control onChange={(e) => {setUserName(e.target.value)}} name='name' type=\"text\" placeholder=\"Enter name\" />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"formBasicEmail\">\r\n                            <Form.Label>Email address</Form.Label>\r\n                            <Form.Control name='email' type=\"email\" placeholder=\"Enter email\" />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"formBasicPassword\">\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control name='password' type=\"password\" placeholder=\"Password\" />\r\n                        </Form.Group>\r\n\r\n                        <Button variant=\"primary\" type=\"submit\">\r\n                            Create Account\r\n                        </Button>\r\n                    </Form>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n};\r\n\r\n\r\nexport default withRouter(SignUp);","C:\\Users\\jdk17\\Desktop\\TargetVet\\src\\config\\Login.js",["171"],"C:\\Users\\jdk17\\Desktop\\TargetVet\\src\\pages\\equine.js",[],"C:\\Users\\jdk17\\Desktop\\TargetVet\\src\\pages\\home.js",[],"C:\\Users\\jdk17\\Desktop\\TargetVet\\src\\pages\\canine.js",[],"C:\\Users\\jdk17\\Desktop\\TargetVet\\src\\components\\cart\\cart.js",["172","173"],"import React, { useState, useEffect } from 'react';\r\nimport { Container, Col, Row, Button, Table } from 'react-bootstrap';\r\nimport CartItem from './cart-item';\r\nimport {Link} from 'react-router-dom';\r\nimport app from '../../config/base';\r\n\r\n\r\nconst Cart = ({cart, clearCart, setCart, removeItemHandler, priceTotal}) => {\r\n\r\n    const [loggedIn, setLoggedIn] = useState(false);\r\n    const [path, setPath] = useState('')\r\n\r\n    useEffect(() => {\r\n        // Update the document title using the browser API\r\n        app.auth().onAuthStateChanged(function(user) {\r\n            if (user) {\r\n              // User is signed in.\r\n              setLoggedIn(true)\r\n              if (cart.length > 0){\r\n                  setPath('/checkout')\r\n              } else {\r\n                  setPath('/store')\r\n              }\r\n            } else {\r\n              // No user is signed in.\r\n              setLoggedIn(false)\r\n              if (cart.length > 0){\r\n                setPath('/sign-in')\r\n              } else {\r\n                setPath('/store')\r\n              }\r\n            }\r\n        });\r\n\r\n    },[]);\r\n    \r\n\r\n \r\n\r\n\r\n  return (\r\n    <div className='cart' >\r\n        <Container  >\r\n            <Row>\r\n                <Table striped bordered hover>\r\n                <thead>\r\n                    <tr>\r\n                    <th></th>\r\n                    <th>Item(s)</th>\r\n                    <th>Qty</th>\r\n                    <th>Price</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {cart.map( x => <CartItem cart={cart} setCart={setCart} key={x.id} item={x} removeItemHandler={removeItemHandler} />)}\r\n                    <tr>\r\n                        <td></td>\r\n                        <td></td>\r\n                        <td>Total</td>\r\n                        <td>${priceTotal}.00</td>\r\n                    </tr>\r\n                </tbody>\r\n                </Table>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    <Link to='/store' >\r\n                    <Button >Back to Store</Button>\r\n                    </Link>\r\n                </Col>\r\n                <Col>\r\n                    <Button onClick={clearCart} >Clear Cart</Button>\r\n                </Col>\r\n                <Col>\r\n                    <Link to={path} >\r\n                        <Button >Proceed to checkout</Button>\r\n                    </Link>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Cart;","C:\\Users\\jdk17\\Desktop\\TargetVet\\src\\components\\store\\store.js",[],"C:\\Users\\jdk17\\Desktop\\TargetVet\\src\\components\\checkout\\checkout.js",["174","175"],"import React  from 'react';\r\nimport Review from './review';\r\nimport Summary from './summary';\r\nimport { Button} from 'react-bootstrap';\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\nconst Checkout = ({cart, priceTotal }) => {\r\n\r\n\r\n\r\n  return (\r\n        <div>\r\n            <div className='checkout-parent' >\r\n                <div>\r\n                    <Review cart={cart} priceTotal={priceTotal} />\r\n                </div>\r\n                <div className='child' >\r\n                    <Summary priceTotal={priceTotal} cart={cart} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n  );\r\n}\r\n\r\nexport default Checkout;","C:\\Users\\jdk17\\Desktop\\TargetVet\\src\\components\\checkout\\payment\\success.js",["176"],"import React, { useEffect}  from 'react';\r\nimport { Container, Col, Row} from 'react-bootstrap';\r\n\r\n\r\n\r\nconst Success = ({setCart }) => {\r\n\r\n    useEffect(() => {\r\n        setCart([]);\r\n    },[]);\r\n\r\n  return (\r\n    <div >\r\n        <Container>\r\n            <Row>\r\n            <Col>\r\n                <h3>Your Order Has Been Successful</h3>\r\n            </Col>\r\n            </Row>\r\n        </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Success;","C:\\Users\\jdk17\\Desktop\\TargetVet\\src\\components\\nav\\nav.js",["177","178","179"],"C:\\Users\\jdk17\\Desktop\\TargetVet\\src\\config\\base.js",[],"C:\\Users\\jdk17\\Desktop\\TargetVet\\src\\components\\cart\\cart-item.js",[],"C:\\Users\\jdk17\\Desktop\\TargetVet\\src\\components\\checkout\\summary.js",["180","181","182","183","184","185"],"import React, { useState, useEffect } from 'react';\r\nimport { Container, Col, Row, Button, Card, Spinner } from 'react-bootstrap';\r\nimport {useHistory} from 'react-router-dom';\r\nimport app from '../../config/base';\r\nimport firebase from 'firebase';\r\nimport emailjs from 'emailjs-com';\r\nimport Paypal from './payment/Paypal';\r\nimport moment from 'moment';\r\n\r\n\r\nconst Summary = ({priceTotal, cart}) => {\r\n\r\n    const db = firebase.firestore();\r\n\r\n    const [currentUser, setCurrentUser] = useState('no email yet');\r\n    const [sendingCart, setSendingCart] = useState('');\r\n    const [spinner, setSpinner] = useState(false);\r\n    const [orders, setOrder] = useState(['']);\r\n    const [userId, setUserId] = useState('')\r\n\r\n    useEffect(() => {\r\n        app.auth().onAuthStateChanged((user) => {\r\n            setCurrentUser(user);\r\n            setUserId(user.uid)\r\n            db.collection('users').doc(user.uid).get().then( doc => {\r\n                let numOfOrders = doc.data().orderCount\r\n                console.log(numOfOrders)\r\n                setOrder(numOfOrders)\r\n            })\r\n        })\r\n        let newArray = []\r\n        cart.forEach(item => {\r\n            newArray.push(` ${item.title} ${item.subtitle} ${item.test * item.qty} tests for $${item.price * item.qty}.00    |`)\r\n        });\r\n        setSendingCart(newArray.join(' '))\r\n\r\n        setOrder(orders => [...orders, cart]);\r\n\r\n\r\n\r\n\r\n    }, [])\r\n\r\n    //going to success page after payment\r\n    let history = useHistory();\r\n\r\n    function handleClick() {\r\n      history.push(\"/success\");\r\n    }\r\n\r\n\r\n    const sendConfirmationEmail = () => {\r\n\r\n        if (cart.length > 0){\r\n\r\n            setSpinner(true)\r\n\r\n            var templateParams = {\r\n                name: 'James',\r\n                email: currentUser.email,\r\n                cart: sendingCart,\r\n                total_price: priceTotal,\r\n                shipping: '217 Pleasant St.',\r\n            };\r\n    \r\n            emailjs.send('service_12x6qif', 'template_5h83g8t', templateParams , 'user_CqDTkQBUriwIbjinTaVaw')\r\n                .then(function(response) {\r\n                   console.log('SUCCESS!', response.status, response.text);\r\n                   setSpinner(false)\r\n                   handleClick();\r\n                }, function(error) {\r\n                   console.log('FAILED...', error);\r\n                });\r\n\r\n        } else {\r\n            console.log('no items in the cart')\r\n        }\r\n    }\r\n\r\n\r\n\r\n    \r\n\r\n\r\n    // fake button test to show order's history\r\n    const fakePayHandler = () => {\r\n\r\n        db.collection('users').doc(userId).set({\r\n            orderCount: orders + 1,\r\n            name: 'James Krehbiel',\r\n            address: '1207 s Busey'\r\n        })\r\n        db.collection('users').doc(userId).collection('orders').add({\r\n            order: cart,\r\n            timeStamp: moment().format('MM/DD/YY h:mm:ss a')\r\n        }) \r\n        console.log('fake paid, add order to database');\r\n        history.push(\"/success\");\r\n    }\r\n\r\n\r\n\r\n    let buyButton = null\r\n\r\n    if(spinner === true){\r\n        buyButton = (\r\n            <Spinner animation=\"border\" variant=\"primary\" />\r\n        )\r\n    } else {\r\n        buyButton = (\r\n            <div onClick={sendConfirmationEmail} >\r\n                <Paypal cart={cart} priceTotal={priceTotal} /> \r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n\r\n  return (\r\n        <div className='summary' >\r\n            <div className='parent' >\r\n                <div className='child' >\r\n                    Summary\r\n                </div>\r\n            </div>\r\n\r\n            <div className='parent2' >\r\n                <div className='child1' >\r\n                    <div className='child-text' >             \r\n                        <span className='bold' >({cart.length})</span> item(s)\r\n                    </div>\r\n                    <div className='child-text' >\r\n                        Shipping\r\n                    </div>\r\n                    <div className='child-text' >\r\n                        Tax\r\n                    </div>\r\n                    <div className='child-text' >\r\n                        Total\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='child2' >\r\n                    <div className='child-text' >             \r\n                        ${priceTotal}\r\n                    </div>\r\n                    <div className='child-text' >\r\n                        $0\r\n                    </div>\r\n                    <div className='child-text' >\r\n                        $0\r\n                    </div>\r\n                    <div className='child-text' >\r\n                        ${priceTotal}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className='parent3' >\r\n                <div  className='child' >\r\n                    {buyButton} \r\n                </div>\r\n            </div>\r\n            <div>\r\n                <button onClick={fakePayHandler} >Fake Pay</button>\r\n            </div>\r\n\r\n        </div>\r\n  );\r\n}\r\n\r\nexport default Summary;","C:\\Users\\jdk17\\Desktop\\TargetVet\\src\\components\\checkout\\shippingAddress.js",[],["186","187"],"C:\\Users\\jdk17\\Desktop\\TargetVet\\src\\components\\checkout\\payment\\payment.js",["188","189","190","191","192","193","194","195","196","197","198","199","200","201"],"import React, {useState}  from 'react';\r\nimport { Container, Col, Row, Button, Form, Card } from 'react-bootstrap';\r\nimport PaymentOptions from './paymentOptions';\r\nimport Paypal from './Paypal';\r\n\r\n\r\n\r\n\r\nconst Payment = ({cart, clearCart, removeItemHandler}) => {\r\n\r\n    const [name, setName] = useState();\r\n    const [address, setAddress] = useState();\r\n    const [city, setCity] = useState();\r\n    const [state, setState] = useState();\r\n    const [change, setChange] = useState(true);\r\n\r\n    const [paymentOption, setPaymentOption] = useState('none');\r\n\r\n    const saveAddressHandler = () => {\r\n        setChange(false)\r\n    }\r\n\r\n    let shipping = null\r\n\r\n    if(change){\r\n        shipping = (\r\n            <Container>\r\n            {/* <Row>\r\n            <Col className='payment-header'>\r\n                <h4>Pay</h4>\r\n            </Col>\r\n            <br></br>\r\n            </Row>\r\n            <Row>\r\n            <Col></Col>\r\n            <Col xs={6}>\r\n            <Paypal/>\r\n            <PaymentOptions paymentOption={paymentOption} setPaymentOption={setPaymentOption} />\r\n            <div className='save' >\r\n            <Button  variant=\"secondary\" onClick={() => saveAddressHandler()} >\r\n                Save\r\n            </Button>\r\n            </div>\r\n            </Col>\r\n            <Col></Col>\r\n            </Row> */}\r\n            <br></br>\r\n            </Container>\r\n        )\r\n    } else {\r\n        shipping = (\r\n            <Container>\r\n                <Row>\r\n                <Col>\r\n                    <Card >\r\n                    <Card.Body>\r\n                        <Row >\r\n                        <Col >\r\n                        <h4>Pay</h4>\r\n                        </Col>\r\n                        <Col>\r\n                        <Container>\r\n                            <Row>\r\n                                {paymentOption}\r\n                            </Row>\r\n                        </Container>\r\n                        </Col>\r\n                        <Col>\r\n                        <button onClick={() => setChange(true)} >Change</button>\r\n                        </Col>\r\n                        </Row>\r\n                    </Card.Body>\r\n                    </Card> \r\n                </Col>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n    \r\n\r\n\r\n  return (\r\n        <Col className='payment' >\r\n            {shipping}\r\n        </Col>\r\n  );\r\n}\r\n\r\nexport default Payment;","C:\\Users\\jdk17\\Desktop\\TargetVet\\src\\components\\nav\\auth-items.js",["202","203","204"],"import React, { useState, useEffect } from 'react';\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport app from '../../config/base';\r\n\r\n\r\nexport default function AuthItems() {\r\n\r\n    const [loggedIn, setLoggedIn] = useState(false);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        // Update the document title using the browser API\r\n\r\n        app.auth().onAuthStateChanged(function(user) {\r\n            if (user) {\r\n              // User is signed in.\r\n              setLoggedIn(true)              \r\n            } else {\r\n              // No user is signed in.\r\n              setLoggedIn(false)\r\n            }\r\n        });\r\n\r\n    },[]);\r\n\r\n\r\n    let items = null\r\n\r\n    if (loggedIn === true){\r\n        items = (\r\n            <div className='auth' >\r\n                <Link className='auth-item' onClick={() => app.auth().signOut()} >\r\n                    Sign Out\r\n                </Link>\r\n            </div>\r\n        )\r\n    } else {\r\n        items = (\r\n            <div className='auth no-hover' >\r\n                <Link className='auth-item' to='/sign-in' >\r\n                    Sign In\r\n                </Link>\r\n                <Link className='auth-item' to='/create-account' >\r\n                    Create Account\r\n                </Link>\r\n            </div>\r\n        ) \r\n    }\r\n\r\n\r\n\r\n  return (\r\n    <div className='auth-bottom' >\r\n        {items}\r\n    </div>\r\n  );\r\n}\r\n\r\n","C:\\Users\\jdk17\\Desktop\\TargetVet\\src\\components\\checkout\\review.js",["205","206"],"import React, {useState}  from 'react';\r\nimport { Button} from 'react-bootstrap';\r\nimport ReviewCard from './reviewCard';\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\nconst Review = ({cart}) => {\r\n\r\n\r\n    const [change, setChange] = useState(true);\r\n\r\n\r\n\r\n    const saveAddressHandler = () => {\r\n        setChange(false)\r\n    }\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div className='review' >\r\n        <div>\r\n        <h3>Review Order</h3>\r\n\r\n        {cart.map( x => <ReviewCard x={x} key={x.id} /> )}\r\n\r\n        <Link to='/cart' >\r\n            <Button>Back to Cart</Button>\r\n        </Link>\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Review;","C:\\Users\\jdk17\\Desktop\\TargetVet\\src\\components\\nav\\top-auth-items.js",[],"C:\\Users\\jdk17\\Desktop\\TargetVet\\src\\components\\store\\productList\\productList.js",["207"],"import React, {useState, useEffect} from 'react';\r\nimport '../store.css';\r\nimport { Form} from 'react-bootstrap';\r\n\r\nconst ProductList = ({categories, setCategoryHandler}) => {\r\n\r\n  const [list, setList] = useState(categories)\r\n\r\n\r\n  const setCatFilterHandler = (e) => {\r\n    if (e.target.value === 'All'){\r\n      setList(categories)\r\n    } else if(e.target.value === 'Equine'){\r\n      setList([])\r\n      let newList = categories.filter(category => category.type === 'Equine')\r\n      setList(newList);\r\n    }else {\r\n      setList([])\r\n      let newList = categories.filter(category => category.type === 'Canine')\r\n      setList(newList);\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div className='product-list' >\r\n        <h6 className='list-title' >Shop By Category</h6>\r\n        <Form.Control onChange={(e) => setCatFilterHandler(e)} as=\"select\">\r\n          <option>All</option>\r\n          <option>Canine</option>\r\n          <option>Equine</option>\r\n        </Form.Control>\r\n        {list.map(x => \r\n            <h6 className='product-title' onClick={()=>setCategoryHandler(x)} key={x.id} >{x.name}</h6>\r\n        )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductList;","C:\\Users\\jdk17\\Desktop\\TargetVet\\src\\components\\store\\storeFront\\storeFront.js",[],"C:\\Users\\jdk17\\Desktop\\TargetVet\\src\\components\\store\\storeFront\\storeFrontDeck.js",[],"C:\\Users\\jdk17\\Desktop\\TargetVet\\src\\components\\store\\storeFront\\storeFrontCard.js",["208","209","210","211","212","213","214"],"import React, { useState, useEffect } from 'react';\r\nimport { Image, Spinner } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport products from '../../../products';\r\nimport '../store.css'\r\nimport InfoAccordion from './infoAccordion';\r\n\r\nexport default function MyCard({data, group, addToCartHandler, cart, instockArray }) {\r\n\r\n\r\n    const [renderPrice, setRenderPrice] = useState();\r\n    const [info, setInfo] = useState([]);\r\n    const [show, setShow] = useState(false);\r\n    const [loadSpinner, setLoadSpinner] = useState(false);\r\n    const [qty, setQty] = useState(1);\r\n    const [accordion, setAccordion] = useState(false);\r\n    const [instock, setInstock] = useState(false)\r\n\r\n    useEffect(() => {\r\n        // Update the document title using the browser API\r\n        setRenderPrice(data.price[1])\r\n        setInfo(data.description)\r\n\r\n        instockArray.forEach(product => {\r\n            if (product.id === data.id && product.instock ){\r\n                setInstock(true) \r\n            }\r\n        });\r\n\r\n    },[]);\r\n\r\n\r\n\r\n    const selectionCollapseHandler = (sectionData) => {\r\n        setInfo(sectionData)\r\n    }\r\n\r\n    function isSelected(sectionData) {\r\n        if (sectionData === info) {\r\n            return 'collapse-head selected'\r\n        } else {\r\n            return 'collapse-head'\r\n        }\r\n    }\r\n\r\n\r\n    // Rendering different things\r\n    let renderQty = null\r\n    if(1 > qty){\r\n        renderQty = 1\r\n    }else {\r\n        renderQty = qty\r\n    }\r\n    let renderCheckout = null\r\n    if(cart.length > 0){\r\n        renderCheckout = (\r\n            <Link to='/cart' >\r\n                <button className='checkout' >Checkout &#8594;</button>\r\n            </Link>\r\n        )\r\n    } else {\r\n        renderCheckout = null\r\n    }\r\n    let renderAccordion = null\r\n    if (accordion){\r\n        renderAccordion = (\r\n            <InfoAccordion data={data} />\r\n        )\r\n    } else {\r\n        renderAccordion = null\r\n    }\r\n    let expanded = null\r\n    if (accordion){\r\n        expanded = '-'\r\n    } else {\r\n        expanded = '+'\r\n    }\r\n    let renderInstock = null\r\n    if (!instock){\r\n        renderInstock = (\r\n            <div className='out-of-stock'  >\r\n                <h6 >Out of Stock</h6>\r\n            </div>\r\n        )\r\n    } else {\r\n        renderInstock = (\r\n            <>\r\n            <button className='add-to-cart-button'  onClick={() => combineAddtoCartHandler(data, qty)} >Add to Cart</button>\r\n            <span className='qty' onClick={() => setQty(qty + 1)}> +</span><span className='qty'> ({renderQty}) </span><span className='qty right' onClick={() => setQty(qty - 1)} >- </span>\r\n            </>\r\n        )\r\n    }\r\n\r\n    const combineAddtoCartHandler = (data) => {\r\n        let passingElement = {\r\n            product: data,\r\n            productQty: renderQty,\r\n        }\r\n\r\n        addToCartHandler(passingElement);\r\n        setLoadSpinner(true);\r\n        setTimeout(function() {\r\n            setLoadSpinner(false);\r\n        }, 400);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    //for adding a spinner for signaling that adding to cart has taken place\r\n    let addingButton = null\r\n    if (loadSpinner){\r\n        addingButton = (\r\n            <Spinner animation=\"border\" variant=\"primary\" />\r\n        )\r\n    } else {\r\n        addingButton = (\r\n            <div className='adding' >\r\n                {renderInstock}\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n\r\n\r\n    let productCard = null;\r\n\r\n    if( data.group === group ){\r\n        productCard = (\r\n\r\n        <div className='card-parent' >\r\n\r\n            <div className='child1' >\r\n                <Image className='img' src={data.img} />\r\n            </div>\r\n\r\n            <div className='child2' >\r\n                <h6 className='title' >{data.title}<span> {data.test} tests</span></h6>\r\n                <h6 className='subtitle' >{data.subtitle}</h6>\r\n                <h6 className='info' onClick={() => {setAccordion(!accordion)}} ><span className='button' >Additional Info</span><span className='plus' >{expanded}</span></h6>\r\n            </div>\r\n\r\n            <div className='child3' >\r\n                {addingButton}\r\n                <div className='child' >\r\n                    {renderCheckout}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n    }else {\r\n        productCard = null\r\n    }\r\n\r\n    \r\n\r\n\r\n  return (\r\n    <div>\r\n        {productCard}\r\n        {renderAccordion}\r\n    </div>\r\n  );\r\n}\r\n\r\n","C:\\Users\\jdk17\\Desktop\\TargetVet\\src\\components\\store\\storeFront\\storeFrontGallery.js",[],"C:\\Users\\jdk17\\Desktop\\TargetVet\\src\\components\\store\\storeFront\\imgGalleryCol.js",[],"C:\\Users\\jdk17\\Desktop\\TargetVet\\src\\components\\checkout\\reviewCard.js",["215","216","217"],"import React, {useState}  from 'react';\r\nimport { Container, Col, Row, Image, Card } from 'react-bootstrap';\r\n\r\n\r\n\r\n\r\nconst ReviewCard = ({x}) => {\r\n\r\n\r\n    let units = null\r\n\r\n    if (x.title === 'Blood Collection'){\r\n        units = 'tubes'\r\n    } else {\r\n        units = 'tests'\r\n    }\r\n\r\n\r\n\r\n\r\n  return (\r\n    <Row key={x.id}>\r\n        <Col xs={3} >\r\n            <Image src={x.img} width='80px' />\r\n        </Col>\r\n        <Col  xs={9}>\r\n            <Row>\r\n                <Col><h5>{x.title}</h5></Col>\r\n            </Row>\r\n            <Row>\r\n                <Col><h6>{x.subtitle}</h6><h6> ({x.test * x.qty}) {units}</h6><hr></hr></Col>\r\n            </Row>\r\n        </Col>\r\n    </Row>\r\n  );\r\n}\r\n\r\nexport default ReviewCard;","C:\\Users\\jdk17\\Desktop\\TargetVet\\src\\components\\checkout\\payment\\paymentOptions.js",["218"],"import React, {useState}  from 'react';\r\nimport { Container, Col, Row, Button, Form } from 'react-bootstrap';\r\n\r\n\r\n\r\n\r\nconst PaymentOptions = ({setPaymentOption, paymentOption}) => {\r\n\r\n    \r\n\r\n    function isSelected(payMethod) {\r\n        if (payMethod === paymentOption) {\r\n            return 'collapse-head selected'\r\n        } else {\r\n            return 'collapse-head'\r\n        }\r\n    }\r\n\r\n\r\n\r\n    const selectingPayment = (payMethod) => {\r\n        setPaymentOption(payMethod)\r\n    }\r\n\r\n    let options = null\r\n\r\n    if (paymentOption === 'Card'){\r\n        options = (\r\n            <div className='Card' >\r\n                <input type='text' />\r\n                <Form.Group controlId=\"formBasicCheckbox\">\r\n                    <Form.Check type=\"checkbox\" label=\"check if card's address is different than shipping address\" />\r\n                </Form.Group>\r\n            </div>\r\n        )\r\n    } else {\r\n        options = (\r\n            <div  className='Card'>\r\n                <Button> PayPal </Button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n  return (\r\n    <Container className='paymentOptions' >\r\n        <Row>\r\n            <Col>\r\n                <span onClick={() => selectingPayment('Card')} className={isSelected('Card')} >Card </span>\r\n                <span  onClick={() => selectingPayment('PayPal')} className={isSelected('PayPal')} > PayPal</span>\r\n            </Col>\r\n        </Row>\r\n        <Row>\r\n            {options}\r\n        </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default PaymentOptions;","C:\\Users\\jdk17\\Desktop\\TargetVet\\src\\components\\checkout\\payment\\Paypal.js",["219","220","221"],"import React, {useRef, useEffect, useState} from 'react';\r\nimport emailjs from 'emailjs-com';\r\nimport {useHistory} from 'react-router-dom';\r\nimport app from '../../../config/base';\r\n\r\nexport default function Paypal( {cart, priceTotal} ) {\r\n    \r\n    const paypal = useRef()\r\n    const [currentUser, setCurrentUser] = useState('no email yet');\r\n    const [sendingCart, setSendingCart] = useState('');\r\n\r\n    //going to success page after payment\r\n    let history = useHistory();\r\n\r\n    function handleClick() {\r\n      history.push(\"/success\");\r\n    }\r\n    \r\n    const sendConfirmationEmail = () => {\r\n\r\n        if (cart.length > 0){\r\n\r\n\r\n\r\n            var templateParams = {\r\n                name: 'James',\r\n                email: currentUser.email,\r\n                cart: sendingCart,\r\n                total_price: priceTotal,\r\n                shipping: '217 Pleasant St.',\r\n            };\r\n    \r\n            emailjs.send('service_12x6qif', 'template_5h83g8t', templateParams , 'user_CqDTkQBUriwIbjinTaVaw')\r\n                .then(function(response) {\r\n                   console.log('SUCCESS!', response.status, response.text);\r\n                }, function(error) {\r\n                   console.log('FAILED...', error);\r\n                });\r\n\r\n        } else {\r\n            console.log('no items in the cart')\r\n        }\r\n\r\n    }\r\n\r\n\r\n    useEffect(()=> {\r\n\r\n        //checking if there's a user logged in\r\n        app.auth().onAuthStateChanged((user) => {\r\n            setCurrentUser(user);\r\n        })\r\n        let newArray = []\r\n        cart.forEach(item => {\r\n            newArray.push(` ${item.title} ${item.subtitle} ${item.test * item.qty} tests for $${item.price * item.qty}.00    |`)\r\n        });\r\n        setSendingCart(newArray.join(' '))\r\n\r\n        let total = priceTotal\r\n\r\n\r\n\r\n        //sending payment through paypal\r\n        window.paypal.Buttons({\r\n            createOrder: (data, actions, err) => {\r\n                return actions.order.create({\r\n                    intent: 'CAPTURE',\r\n                    purchase_units: [\r\n                        {\r\n                            description: \"Cool and accurate kit\",\r\n                            amount: {\r\n                                currency_code: 'USD',\r\n                                value: priceTotal\r\n                            }  \r\n                        }\r\n                    ]\r\n                })\r\n            },\r\n            onApprove: async (data, actions) => {\r\n                const order = await actions.order.capture()\r\n                console.log(order)\r\n                sendConfirmationEmail();\r\n            },\r\n            onError: (err) => {\r\n                console.log(err)\r\n            }\r\n        }).render(paypal.current)\r\n    },[])\r\n    \r\n    return (\r\n        <div>\r\n            <div ref={paypal} ></div>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\jdk17\\Desktop\\TargetVet\\src\\components\\store\\storeFront\\infoAccordion.js",["222"],"import React, { useState, useEffect } from 'react';\r\nimport '../store.css'\r\n\r\nexport default function InfoAccordion({data }) {\r\n\r\n    const [info, setInfo] = useState([]);\r\n\r\n    useEffect(() => {\r\n        // Update the document title using the browser API\r\n        setInfo(data.description)\r\n    },[]);\r\n\r\n\r\n\r\n    const selectionCollapseHandler = (sectionData) => {\r\n        setInfo(sectionData)\r\n    }\r\n\r\n    function isSelected(sectionData) {\r\n        if (sectionData === info) {\r\n            return 'collapse-head selected'\r\n        } else {\r\n            return 'collapse-head'\r\n        }\r\n    }\r\n\r\n\r\n  return (\r\n    <div className='accordion' >\r\n        <div className='accordion-head' >\r\n            <span onClick={() => selectionCollapseHandler(data.description)} className={isSelected(data.description)} >Description</span>\r\n            <span onClick={() => selectionCollapseHandler(data.info)} className={isSelected(data.info)} >Info</span>\r\n            <span onClick={() => selectionCollapseHandler(data.highlights)} className={isSelected(data.highlights)} >Highlights</span>\r\n            <span onClick={() => selectionCollapseHandler(data.instructions)} className={isSelected(data.instructions)} >Instruction</span>\r\n        </div>\r\n        <div className='collapse-body'>\r\n            {info.map(text => <p>{text}</p>)}\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n","C:\\Users\\jdk17\\Desktop\\TargetVet\\src\\pages\\AccountPage\\accountInfoPage.js",["223","224","225"],"C:\\Users\\jdk17\\Desktop\\TargetVet\\src\\pages\\AccountPage\\orderHistoryComponet.js",["226","227","228","229"],"import React, {useEffect, useState} from 'react';\r\nimport {  Button, Table, Image } from 'react-bootstrap';\r\nimport app from '../../config/base';\r\nimport {useHistory} from 'react-router-dom';\r\nimport firebase from 'firebase'\r\n\r\n\r\nexport default function OrderHistory({order, index, setCart}) {\r\n\r\n    const db = firebase.firestore();\r\n\r\n    const [showOrder, setShowOrder] = useState(false);\r\n    const [renderDate, setRenderDate] = useState(null);\r\n    const [priceTotal, setPriceTotal] = useState(0);\r\n\r\n    useEffect(() => {\r\n        let date = order.timeStamp\r\n        const CalendarDate = date.split(' ');\r\n        setRenderDate(CalendarDate[0])\r\n        totalPriceHandler()\r\n    },[]);\r\n\r\n    const totalPriceHandler = () => {\r\n        const newGroup = [0]\r\n        const reducer = (accumulator, currentValue) => accumulator + currentValue;\r\n        order.order.forEach(item => {\r\n            newGroup.push(item.price * item.qty)\r\n        });\r\n        setPriceTotal(newGroup.reduce(reducer))\r\n    }\r\n\r\n    let renderDetails = null\r\n    if( showOrder) {\r\n        renderDetails = (\r\n            <div>\r\n                <Table className='table-details' striped >\r\n                    <thead>\r\n                    <tr>\r\n                        <th></th>\r\n                        <th>Item(s)</th>\r\n                        <th>Qty</th>\r\n                        <th>Price</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {order.order.map(item => {\r\n                        return (\r\n                            <tr>\r\n                                <td><Image className='order-img' src={item.img}  /></td>\r\n                                <td><h6>{item.title}</h6><h6>{item.subtitle}</h6><h6>{item.qty * item.test} tests</h6></td>\r\n                                <td>{item.qty}</td>\r\n                                <td>${item.price * item.qty}</td>\r\n                            </tr>\r\n                        )\r\n                    })}\r\n                    <tr>\r\n                        <td></td>\r\n                        <td></td>\r\n                        <td>total</td>\r\n                        <td>${priceTotal}</td>\r\n                    </tr>\r\n                    </tbody>\r\n                </Table>\r\n            </div>\r\n        )\r\n    } else { renderDetails = null}\r\n\r\n    let history = useHistory();\r\n    function goToCheckout() {\r\n      history.push(\"/checkout\");\r\n    }\r\n\r\n    const buyAgainHandler = () => {\r\n        console.log('buy again')\r\n        console.log(order.order)\r\n        setCart(order.order)\r\n        goToCheckout();\r\n    }\r\n    \r\n\r\n\r\n  return (\r\n    <>  \r\n    <div className='order-history' >\r\n        <div className='order-cart' >\r\n            <h6 className='title' >Order <span className='date' >{order.timeStamp}</span></h6>\r\n        </div>\r\n        <div className='order-cart' >\r\n            <span className='details' onClick={() => setShowOrder(!showOrder)} >view details ({order.order.length}) </span>\r\n            <Button onClick={buyAgainHandler} >Buy Again</Button>\r\n        </div>\r\n    </div>\r\n    {renderDetails}\r\n    </>\r\n  );\r\n}\r\n\r\n",{"ruleId":"230","replacedBy":"231"},{"ruleId":"232","replacedBy":"233"},{"ruleId":"234","severity":1,"message":"235","line":54,"column":5,"nodeType":"236","endLine":54,"endColumn":7,"suggestions":"237"},{"ruleId":"238","severity":1,"message":"239","line":202,"column":62,"nodeType":"240","endLine":202,"endColumn":73},{"ruleId":"238","severity":1,"message":"239","line":217,"column":69,"nodeType":"240","endLine":217,"endColumn":80},{"ruleId":"230","replacedBy":"241"},{"ruleId":"232","replacedBy":"242"},{"ruleId":"243","severity":1,"message":"244","line":14,"column":12,"nodeType":"245","messageId":"246","endLine":14,"endColumn":23},{"ruleId":"234","severity":1,"message":"247","line":54,"column":8,"nodeType":"236","endLine":54,"endColumn":17,"suggestions":"248"},{"ruleId":"243","severity":1,"message":"249","line":59,"column":11,"nodeType":"245","messageId":"246","endLine":59,"endColumn":27},{"ruleId":"243","severity":1,"message":"250","line":5,"column":23,"nodeType":"245","messageId":"246","endLine":5,"endColumn":35},{"ruleId":"243","severity":1,"message":"251","line":10,"column":12,"nodeType":"245","messageId":"246","endLine":10,"endColumn":20},{"ruleId":"234","severity":1,"message":"252","line":35,"column":7,"nodeType":"236","endLine":35,"endColumn":9,"suggestions":"253"},{"ruleId":"243","severity":1,"message":"254","line":4,"column":10,"nodeType":"245","messageId":"246","endLine":4,"endColumn":16},{"ruleId":"243","severity":1,"message":"255","line":5,"column":9,"nodeType":"245","messageId":"246","endLine":5,"endColumn":13},{"ruleId":"234","severity":1,"message":"256","line":10,"column":7,"nodeType":"236","endLine":10,"endColumn":9,"suggestions":"257"},{"ruleId":"243","severity":1,"message":"258","line":4,"column":26,"nodeType":"245","messageId":"246","endLine":4,"endColumn":29},{"ruleId":"243","severity":1,"message":"250","line":7,"column":10,"nodeType":"245","messageId":"246","endLine":7,"endColumn":22},{"ruleId":"243","severity":1,"message":"259","line":12,"column":11,"nodeType":"245","messageId":"246","endLine":12,"endColumn":13},{"ruleId":"243","severity":1,"message":"260","line":2,"column":10,"nodeType":"245","messageId":"246","endLine":2,"endColumn":19},{"ruleId":"243","severity":1,"message":"258","line":2,"column":21,"nodeType":"245","messageId":"246","endLine":2,"endColumn":24},{"ruleId":"243","severity":1,"message":"261","line":2,"column":26,"nodeType":"245","messageId":"246","endLine":2,"endColumn":29},{"ruleId":"243","severity":1,"message":"254","line":2,"column":31,"nodeType":"245","messageId":"246","endLine":2,"endColumn":37},{"ruleId":"243","severity":1,"message":"262","line":2,"column":39,"nodeType":"245","messageId":"246","endLine":2,"endColumn":43},{"ruleId":"234","severity":1,"message":"263","line":42,"column":8,"nodeType":"236","endLine":42,"endColumn":10,"suggestions":"264"},{"ruleId":"230","replacedBy":"265"},{"ruleId":"232","replacedBy":"266"},{"ruleId":"243","severity":1,"message":"254","line":2,"column":31,"nodeType":"245","messageId":"246","endLine":2,"endColumn":37},{"ruleId":"243","severity":1,"message":"267","line":2,"column":39,"nodeType":"245","messageId":"246","endLine":2,"endColumn":43},{"ruleId":"243","severity":1,"message":"268","line":3,"column":8,"nodeType":"245","messageId":"246","endLine":3,"endColumn":22},{"ruleId":"243","severity":1,"message":"269","line":4,"column":8,"nodeType":"245","messageId":"246","endLine":4,"endColumn":14},{"ruleId":"243","severity":1,"message":"270","line":11,"column":12,"nodeType":"245","messageId":"246","endLine":11,"endColumn":16},{"ruleId":"243","severity":1,"message":"271","line":11,"column":18,"nodeType":"245","messageId":"246","endLine":11,"endColumn":25},{"ruleId":"243","severity":1,"message":"272","line":12,"column":12,"nodeType":"245","messageId":"246","endLine":12,"endColumn":19},{"ruleId":"243","severity":1,"message":"273","line":12,"column":21,"nodeType":"245","messageId":"246","endLine":12,"endColumn":31},{"ruleId":"243","severity":1,"message":"274","line":13,"column":12,"nodeType":"245","messageId":"246","endLine":13,"endColumn":16},{"ruleId":"243","severity":1,"message":"275","line":13,"column":18,"nodeType":"245","messageId":"246","endLine":13,"endColumn":25},{"ruleId":"243","severity":1,"message":"276","line":14,"column":12,"nodeType":"245","messageId":"246","endLine":14,"endColumn":17},{"ruleId":"243","severity":1,"message":"277","line":14,"column":19,"nodeType":"245","messageId":"246","endLine":14,"endColumn":27},{"ruleId":"243","severity":1,"message":"278","line":17,"column":27,"nodeType":"245","messageId":"246","endLine":17,"endColumn":43},{"ruleId":"243","severity":1,"message":"279","line":19,"column":11,"nodeType":"245","messageId":"246","endLine":19,"endColumn":29},{"ruleId":"243","severity":1,"message":"261","line":2,"column":10,"nodeType":"245","messageId":"246","endLine":2,"endColumn":13},{"ruleId":"243","severity":1,"message":"258","line":2,"column":15,"nodeType":"245","messageId":"246","endLine":2,"endColumn":18},{"ruleId":"243","severity":1,"message":"260","line":2,"column":20,"nodeType":"245","messageId":"246","endLine":2,"endColumn":29},{"ruleId":"243","severity":1,"message":"280","line":10,"column":12,"nodeType":"245","messageId":"246","endLine":10,"endColumn":18},{"ruleId":"243","severity":1,"message":"279","line":14,"column":11,"nodeType":"245","messageId":"246","endLine":14,"endColumn":29},{"ruleId":"243","severity":1,"message":"281","line":1,"column":26,"nodeType":"245","messageId":"246","endLine":1,"endColumn":35},{"ruleId":"243","severity":1,"message":"282","line":4,"column":8,"nodeType":"245","messageId":"246","endLine":4,"endColumn":16},{"ruleId":"243","severity":1,"message":"283","line":11,"column":12,"nodeType":"245","messageId":"246","endLine":11,"endColumn":23},{"ruleId":"243","severity":1,"message":"284","line":13,"column":12,"nodeType":"245","messageId":"246","endLine":13,"endColumn":16},{"ruleId":"243","severity":1,"message":"285","line":13,"column":18,"nodeType":"245","messageId":"246","endLine":13,"endColumn":25},{"ruleId":"234","severity":1,"message":"286","line":30,"column":7,"nodeType":"236","endLine":30,"endColumn":9,"suggestions":"287"},{"ruleId":"243","severity":1,"message":"288","line":34,"column":11,"nodeType":"245","messageId":"246","endLine":34,"endColumn":35},{"ruleId":"243","severity":1,"message":"289","line":38,"column":14,"nodeType":"245","messageId":"246","endLine":38,"endColumn":24},{"ruleId":"243","severity":1,"message":"290","line":1,"column":16,"nodeType":"245","messageId":"246","endLine":1,"endColumn":24},{"ruleId":"243","severity":1,"message":"260","line":2,"column":10,"nodeType":"245","messageId":"246","endLine":2,"endColumn":19},{"ruleId":"243","severity":1,"message":"262","line":2,"column":38,"nodeType":"245","messageId":"246","endLine":2,"endColumn":42},{"ruleId":"243","severity":1,"message":"290","line":1,"column":16,"nodeType":"245","messageId":"246","endLine":1,"endColumn":24},{"ruleId":"243","severity":1,"message":"291","line":15,"column":14,"nodeType":"245","messageId":"246","endLine":15,"endColumn":25},{"ruleId":"243","severity":1,"message":"292","line":59,"column":13,"nodeType":"245","messageId":"246","endLine":59,"endColumn":18},{"ruleId":"234","severity":1,"message":"293","line":88,"column":7,"nodeType":"236","endLine":88,"endColumn":9,"suggestions":"294"},{"ruleId":"234","severity":1,"message":"295","line":11,"column":7,"nodeType":"236","endLine":11,"endColumn":9,"suggestions":"296"},{"ruleId":"243","severity":1,"message":"297","line":11,"column":12,"nodeType":"245","messageId":"246","endLine":11,"endColumn":17},{"ruleId":"243","severity":1,"message":"298","line":11,"column":19,"nodeType":"245","messageId":"246","endLine":11,"endColumn":27},{"ruleId":"234","severity":1,"message":"299","line":75,"column":7,"nodeType":"236","endLine":75,"endColumn":9,"suggestions":"300"},{"ruleId":"243","severity":1,"message":"301","line":3,"column":8,"nodeType":"245","messageId":"246","endLine":3,"endColumn":11},{"ruleId":"243","severity":1,"message":"259","line":10,"column":11,"nodeType":"245","messageId":"246","endLine":10,"endColumn":13},{"ruleId":"243","severity":1,"message":"302","line":13,"column":12,"nodeType":"245","messageId":"246","endLine":13,"endColumn":22},{"ruleId":"234","severity":1,"message":"303","line":21,"column":7,"nodeType":"236","endLine":21,"endColumn":9,"suggestions":"304"},"no-native-reassign",["305"],"no-negated-in-lhs",["306"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'ref'. Either include it or remove the dependency array.","ArrayExpression",["307"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["305"],["306"],"no-unused-vars","'firebaseUid' is assigned a value but never used.","Identifier","unusedVar","React Hook useCallback has missing dependencies: 'db' and 'userName'. Either include them or remove the dependency array.",["308"],"'sendWelcomeEmail' is assigned a value but never used.","'AuthProvider' is defined but never used.","'loggedIn' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'cart.length'. Either include it or remove the dependency array.",["309"],"'Button' is defined but never used.","'Link' is defined but never used.","React Hook useEffect has a missing dependency: 'setCart'. Either include it or remove the dependency array. If 'setCart' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["310"],"'Col' is defined but never used.","'db' is assigned a value but never used.","'Container' is defined but never used.","'Row' is defined but never used.","'Card' is defined but never used.","React Hook useEffect has missing dependencies: 'cart' and 'db'. Either include them or remove the dependency array. If 'setOrder' needs the current value of 'cart', you can also switch to useReducer instead of useState and read 'cart' in the reducer.",["311"],["305"],["306"],"'Form' is defined but never used.","'PaymentOptions' is defined but never used.","'Paypal' is defined but never used.","'name' is assigned a value but never used.","'setName' is assigned a value but never used.","'address' is assigned a value but never used.","'setAddress' is assigned a value but never used.","'city' is assigned a value but never used.","'setCity' is assigned a value but never used.","'state' is assigned a value but never used.","'setState' is assigned a value but never used.","'setPaymentOption' is assigned a value but never used.","'saveAddressHandler' is assigned a value but never used.","'change' is assigned a value but never used.","'useEffect' is defined but never used.","'products' is defined but never used.","'renderPrice' is assigned a value but never used.","'show' is assigned a value but never used.","'setShow' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'data.description', 'data.id', 'data.price', and 'instockArray'. Either include them or remove the dependency array. If 'setRenderPrice' needs the current value of 'data.price', you can also switch to useReducer instead of useState and read 'data.price' in the reducer.",["312"],"'selectionCollapseHandler' is assigned a value but never used.","'isSelected' is defined but never used.","'useState' is defined but never used.","'handleClick' is defined but never used.","'total' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'cart', 'priceTotal', and 'sendConfirmationEmail'. Either include them or remove the dependency array.",["313"],"React Hook useEffect has a missing dependency: 'data.description'. Either include it or remove the dependency array. If 'setInfo' needs the current value of 'data.description', you can also switch to useReducer instead of useState and read 'data.description' in the reducer.",["314"],"'guide' is assigned a value but never used.","'setGuide' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'db' and 'signInPage'. Either include them or remove the dependency array.",["315"],"'app' is defined but never used.","'renderDate' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'order.timeStamp' and 'totalPriceHandler'. Either include them or remove the dependency array.",["316"],"no-global-assign","no-unsafe-negation",{"desc":"317","fix":"318"},{"desc":"319","fix":"320"},{"desc":"321","fix":"322"},{"desc":"323","fix":"324"},{"desc":"325","fix":"326"},{"desc":"327","fix":"328"},{"desc":"329","fix":"330"},{"desc":"331","fix":"332"},{"desc":"333","fix":"334"},{"desc":"335","fix":"336"},"Update the dependencies array to be: [ref]",{"range":"337","text":"338"},"Update the dependencies array to be: [db, userName]",{"range":"339","text":"340"},"Update the dependencies array to be: [cart.length]",{"range":"341","text":"342"},"Update the dependencies array to be: [setCart]",{"range":"343","text":"344"},"Update the dependencies array to be: [cart, db]",{"range":"345","text":"346"},"Update the dependencies array to be: [data.description, data.id, data.price, instockArray]",{"range":"347","text":"348"},"Update the dependencies array to be: [cart, priceTotal, sendConfirmationEmail]",{"range":"349","text":"350"},"Update the dependencies array to be: [data.description]",{"range":"351","text":"352"},"Update the dependencies array to be: [db, signInPage]",{"range":"353","text":"354"},"Update the dependencies array to be: [order.timeStamp, totalPriceHandler]",{"range":"355","text":"356"},[1367,1369],"[ref]",[1519,1528],"[db, userName]",[1093,1095],"[cart.length]",[192,194],"[setCart]",[1409,1411],"[cart, db]",[1040,1042],"[data.description, data.id, data.price, instockArray]",[2731,2733],"[cart, priceTotal, sendConfirmationEmail]",[299,301],"[data.description]",[2643,2645],"[db, signInPage]",[687,689],"[order.timeStamp, totalPriceHandler]"]